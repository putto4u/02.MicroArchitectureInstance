AWS에서 가장 많이 사용되는 **Ubuntu Linux 서버 인스턴스**를 생성하는 방법, 즉 **EC2 인스턴스** 생성 과정을 실습 절차에 가깝게 단계별로 설명해 드리겠습니다. 보안과 네트워킹의 기본을 확실히 이해하도록 중요한 부분을 강조.

---

## 🚀 AWS에서 Ubuntu Linux 서버 인스턴스 생성 절차

이 과정은 AWS의 **EC2(Elastic Compute Cloud)** 서비스를 이용하며, 보안을 위해 **키 페어**와 **보안 그룹(방화벽)** 설정이 핵심입니다.

### 단계 1: AWS 관리 콘솔 접속 및 EC2 서비스 선택

1.  **로그인:** AWS 관리 콘솔에 접속합니다.
2.  **서비스 이동:** 상단의 검색창이나 메뉴에서 **EC2**를 검색하여 서비스 페이지로 이동합니다.
3.  **인스턴스 시작:** EC2 대시보드에서 우측 상단의 **'인스턴스 시작(Launch Instances)'** 버튼을 클릭합니다.

---

## 단계 2: 인스턴스 설정 (OS, 유형, 키 페어)

### 2.1. 이름 및 OS 선택 (AMI)
1.  **이름:** 인스턴스를 쉽게 식별할 수 있는 이름을 지정합니다 (예: `Ubuntu-Web-Server-A`).
2.  **AMI (Amazon Machine Image) 선택:** 운영체제 이미지입니다.
    * **Ubuntu 선택:** **'Ubuntu'**를 검색하거나 목록에서 **'Ubuntu Server 22.04 LTS'** 등 최신 **LTS(Long-Term Support)** 버전을 선택합니다.

### 2.2. 인스턴스 유형 및 키 페어 설정
1.  **인스턴스 유형 (Type):** CPU, 메모리 등의 스펙을 결정합니다.
    * **권장:** 실습용으로는 **`t2.micro`** 또는 **`t3.micro`** (프리티어 사용 가능)를 선택합니다.
    * *(실전 팁: AI, DB 등 고성능 워크로드에는 `c`, `r`, `p`, `x` 등 최적화된 유형을 선택해야 합니다.)*
2.  **키 페어 (Key Pair) 생성/선택 (보안 필수!)**
    * **'새 키 페어 생성'**을 선택하고 이름을 지정합니다 (예: `my-ubuntu-key`).
    * **`.pem`** 형식으로 선택하고 생성하면 **개인 키 파일이 다운로드**됩니다. 이 파일은 인스턴스에 SSH로 접속할 때 **비밀번호를 대체**하는 인증 수단이므로 **절대 유출되면 안 됩니다.**

---

## 단계 3: 네트워크 및 보안 설정 (방화벽)

### 3.1. 네트워크 설정 (VPC, 서브넷)
1.  **VPC:** 기본 VPC를 사용하거나 미리 생성한 VPC를 선택합니다.
2.  **서브넷:** 인스턴스를 배치할 서브넷을 선택합니다. **퍼블릭 서브넷**을 선택해야 외부 인터넷에서 접속 가능합니다.
3.  **퍼블릭 IP 자동 할당:** **'활성화'** 상태인지 확인합니다. (클라우드 인스턴스에 외부 접속 가능한 IP를 할당합니다.)

### 3.2. 보안 그룹 (Security Group) 설정
보안 그룹은 인스턴스에 대한 **가상 방화벽(Virtual Firewall)**입니다.

1.  **새 보안 그룹 생성:** 기본 설정을 사용하거나 새로운 이름을 지정합니다.
2.  **인바운드 규칙 (Inbound Rules) 설정:**
    * **SSH (포트 22):** **필수**로 추가합니다. '소스 유형(Source Type)'을 **'내 IP(My IP)'**로 설정하여 **강사님 본인의 현재 IP**만 접근을 허용하도록 제한합니다.
        * *(자주 실수하는 부분: 소스를 **`0.0.0.0/0` (Anywhere)**로 설정하면 보안에 취약해집니다. 최소한의 접근 허용 원칙을 따르세요.)*
    * **HTTP (포트 80):** 웹 서버를 운영할 계획이라면 추가합니다. (소스는 `0.0.0.0/0` 또는 특정 웹 서비스가 필요한 IP 범위)

---

## 단계 4: 스토리지 및 인스턴스 시작

1.  **스토리지 구성:** 기본 설정(8GB EBS 볼륨)을 그대로 두거나 필요한 용량으로 변경합니다.
2.  **인스턴스 시작:** 모든 설정을 검토한 후, 우측 하단의 **'인스턴스 시작'** 버튼을 클릭합니다.

---

## 🔑 단계 5: 인스턴스 접속 (SSH)

인스턴스 상태가 **'실행 중(Running)'**으로 바뀌면 접속을 시도합니다.

1.  **퍼블릭 IP 확인:** EC2 콘솔에서 방금 생성한 인스턴스를 선택하고 **퍼블릭 IPv4 주소**를 복사합니다.
2.  **터미널 접속 (Linux/macOS 기준):**
    * 다운로드한 키 파일(`my-ubuntu-key.pem`)의 권한을 변경합니다. (보안 목적)
        $$\text{chmod 400 my-ubuntu-key.pem}$$
    * SSH 명령어를 사용하여 접속합니다. (Ubuntu의 기본 사용자 이름은 **`ubuntu`**입니다.)
        $$\text{ssh -i my-ubuntu-key.pem ubuntu@\[퍼블릭 IP 주소]}$$

> **보안 전문가 팁:**
>
> **SSH 접속 후 가장 먼저:** `sudo apt update` 및 `sudo apt upgrade` 명령을 사용하여 서버의 패키지를 최신 상태로 업데이트해야 **OS 보안 취약점**을 제거할 수 있습니다. 또한, 접속 후에는 `sudo passwd ubuntu` 명령으로 **비밀번호 인증을 비활성화**하고 **키 파일 인증만 강제**하는 것이 더 안전한 설정입니다.
